diff --git a/everybit/bitarray.c b/everybit/bitarray.c
index ae15a63..eb3864f 100644
--- a/everybit/bitarray.c
+++ b/everybit/bitarray.c
@@ -175,9 +175,18 @@ void bitarray_set(bitarray_t* const bitarray,
 }
 
 void bitarray_randfill(bitarray_t* const bitarray){
-  int32_t *ptr = (int32_t *)bitarray->buf;
-  for (int64_t i=0; i<bitarray->bit_sz/32 + 1; i++){
-    ptr[i] = rand();
+  // Do big fills
+  int64_t *wptr = (int64_t *)bitarray->buf;
+  for (int64_t i = 0; i < bitarray->bit_sz/64; i++){
+    wptr[i] = (int64_t)&wptr[i];
+  }
+
+  // Fill remaining bytes
+  int8_t *bptr = (int8_t *)bitarray->buf;
+  int64_t filled_bytes = bitarray->bit_sz/64*8;
+  int64_t total_bytes = (bitarray->bit_sz+7)/8;
+  for (int64_t j = filled_bytes; j < total_bytes; j++){
+    bptr[j] = (int8_t)&bptr[j]; // Truncate
   }
 }
 
diff --git a/everybit/tests.c b/everybit/tests.c
index c959235..c1fd2cd 100644
--- a/everybit/tests.c
+++ b/everybit/tests.c
@@ -263,8 +263,8 @@ void testutil_require_valid_input(const size_t bit_offset,
 }
 
 // Precomputed array of fibonacci numbers
-const int FIB_SIZE = 53;
-const double fibs[FIB_SIZE] = {1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040, 1346269, 2178309, 3524578, 5702887, 9227465, 14930352, 24157817, 39088169, 63245986, 102334155, 165580141, 267914296, 433494437, 701408733, 1134903170, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025, 20365011074, 32951280099, 53316291173, 86267571272};
+const int FIB_SIZE = 55;
+const double fibs[FIB_SIZE] = {1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040, 1346269, 2178309, 3524578, 5702887, 9227465, 14930352, 24157817, 39088169, 63245986, 102334155, 165580141, 267914296, 433494437, 701408733, 1134903170, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025, 20365011074, 32951280099, 53316291173, 86267571272, 139583862445, 225851433717};
 
 int timed_rotation(const double time_limit_seconds) {
   // We're going to be doing a bunch of rotations; we probably shouldn't
